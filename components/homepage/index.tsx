import Head from "next/head";
import React, { useEffect } from "react";
import Header from "../Header";
import Sidebar from "../Sidebar";
import { IoIosArrowDown } from "react-icons/io";
import { Menu, MenuButton, MenuItem, MenuItems } from "@headlessui/react";
import axios from "axios";
import Post from "./post";
import PostModal from "./PostModal";

const Homepage = () => {
  const [postData, setPostData] = React.useState<any>(null);
  const [comments, setComments] = React.useState<any>(null);
  const [isOpen, setIsOpen] = React.useState(false);
  const [isUpdating, setIsUpdating] = React.useState(false);
  useEffect(() => {
    const token = localStorage.getItem("access_token");
    if (token) {
      axios
        .get("http://localhost:3333/posts", {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        })
        .then((response) => {
          setPostData(response.data);
        })
        .catch((error) => {
          console.error("Error fetching post data:", error);
        });
    }
  }, [isUpdating]);

  return (
    <>
      <Head>
        <title>Homepage</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="w-screen h-screen bg-grey-100">
        <Header />
        <div className="flex pt-2">
          <Sidebar />
          <div>
            <div className="pt-2 flex items-center justify-between w-[800px] gap-4">
              <input
                type="text"
                placeholder="Search"
                className="rounded-lg py-[10px] px-[14px] w-[535px] bg-grey-100 border border-green-100 placeholder:text-[#5B5B5B]"
              />
              <div className="flex items-center justify-center gap-2">
                <Menu>
                  <MenuButton className="inline-flex items-center gap-2 rounded-md py-1.5 px-3 text-sm/6 font-semibold">
                    Community
                    <IoIosArrowDown className="size-4" />
                  </MenuButton>

                  <MenuItems
                    transition
                    anchor="bottom end"
                    className="w-52 origin-top-right p-1 text-sm/6 text-white"
                  >
                    <MenuItem>
                      <button
                        // onClick={logout}
                        className="text-black bg-white group flex w-full items-center gap-2 focus:rounded-lg py-1.5 px-3 data-[focus]:bg-white/90"
                      >
                        <p>History</p>
                      </button>
                    </MenuItem>
                    <MenuItem>
                      <button
                        // onClick={logout}
                        className="text-black bg-white group flex w-full items-center gap-2 focus:rounded-lg py-1.5 px-3 data-[focus]:bg-white/90"
                      >
                        <p>Food</p>
                      </button>
                    </MenuItem>
                  </MenuItems>
                </Menu>
              </div>
              <button
                className="rounded-lg py-[10px] px-[16px] bg-[#49A569] text-white font-semibold text-sm"
                onClick={() => setIsOpen(true)}
              >
                Create +
              </button>
              <PostModal
                isOpen={isOpen}
                setIsOpen={setIsOpen}
                setIsUpdating={setIsUpdating}
              />
            </div>
            <div className="w-[800px] h-[calc(100vh-120px)] overflow-y-scroll">
              <div className="mt-2">
                {postData ? (
                  postData
                    .sort((a: any, b: any) => b.id - a.id)
                    .map((post: any) => (
                      <Post
                        key={post.id}
                        id={post.id}
                        title={post.title}
                        content={post.content}
                        user={post.userId}
                        type={post.typeId}
                        setComments={setComments}
                      />
                    ))
                ) : (
                  <p>Loading...</p>
                )}
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default Homepage;
